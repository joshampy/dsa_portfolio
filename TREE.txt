class Node {
    String item;
    Node left, right;

    public Node(String key) {
        item = key;
        left = right = null;
    }
}

public class Main {
    // root of Tree
    Node root;

    Main() {
        root = null;
    }

    // method to count leaf nodes and return them
    public static int countLeaf(Node node) {
        if (node == null) {
            return 0;
        }
        // if left and right of the node are null
        // it is a leaf node
        if (node.left == null && node.right == null) {
            System.out.print(node.item + " "); // display the leaf node
            return 1;
        } else {
            return countLeaf(node.left) + countLeaf(node.right);
        }
    }

    public static void main(String[] args) {
        // create an object of Tree
        Main tree = new Main();
        // create nodes of the tree
        tree.root = new Node("p");

        tree.root.left = new Node("g");
        tree.root.right = new Node("w");

        tree.root.left.left = new Node("c");
        tree.root.left.right = new Node("k");

        tree.root.left.left.left = new Node("a");
        tree.root.left.left.right = new Node("e");

        tree.root.left.right.left = new Node("i");
        tree.root.left.right.right = new Node("m");

        tree.root.right.left = new Node("s");
        tree.root.right.right = new Node("y");

        tree.root.right.left.left = new Node("q");
        tree.root.right.left.right = new Node("u");

        tree.root.right.right.left = new Node("x");
        tree.root.right.right.right = new Node("z");

        // call method to count leaf nodes and display them
        System.out.print("Leaf Nodes: ");
        int leafNodes = countLeaf(tree.root);
        System.out.println("\nTotal Leaf Nodes = " + leafNodes);
    }
}
